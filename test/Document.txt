อัลกอลิทึม แปลงอินฟิกเป็น โพสต์ฟิก
สว่นตรวจสอบ อินพุต
--ถ้านิพจน์ ที่ รับค่ามา มีเกิน 4 นิพจน์ ให้เเจ้งเตื่อนว่า ดปรเเกรมเรารับค่าสูงสุดเกิด 4 นิพจร์ 
-- ถ้าโอเปอร์เรเตอร์ ที่รับมา ซ้อนกันเกิน 6 ชั้น ให้เเจ้ง เตือนว่า
โปรเเกรมเราสามารถรับค่าโอปอร์เตอร์สูงสุด เเค่ 6 ชั้น
# 6 ชั้นนี้ ไม่นันรวมวงเล็บ น้าาา 
ส่วนการทำอินฟิกให้เป็น โฟสฟิก
--มีตัวเเปรที่เป็น อินฟิกเข้ามาใอห้ฟังก์ชั่น  
-- มีตัวเเปร สเต็ก ที่เป็น ลิตว่าง   ให้ฟงัก็ชั่น 
-- มีตัวเเปร โอเปอร์เรเตอร์ ที่เป็น เก็บลำดับความสำคัญของ โอเปฮร์เรตอร์ #  ในกรณีการตรวจสอบสัจนิรันดรฺ์ นั้น กับหรดให้โอเปอณ์เรเตอร์ทั้งหมดมีค่าเท่ากับ 
// ยกเว้น วงเล็บ ... เงื่อนไข ในกรณีที่ วงเล็บเปิด อยู่ใน infix จะมีค่า มากกว่า Operator ทั้งหมด เพื่อให้วงเล็บเปิดสามารถลงสเต็กทั้นทีโดยไม่ต้อง ป็อบค่าใดๆ ออกมา 
// เเต่เมื่อ วงเล็บเปิดอยู่ในสเต็ก จะกำหนดให้มีค่า นั้ยสุดเพื่อให้สามารถใส้ โอเปอร์เรตเอณ์เข้ามาได้ ทันที 
// ระวังเรื่องวงเล็บซ้อน 
สเต็ก 
- ถ้าสเต็กว่างสามารถ โอเปอณ์เรเตอร์ลงไปได้เลย 
ถ้าเสต็กไม่ว่างให้เป็ชความสำคัญของโอเปอร์เรเตอร์ที่อยู่ในสเต็ก
ถ้าโอเปอร์เรเตอร์มี่อยู่ในเสต็ก นั้นมีค่ามากกว่าเท่ากับ ให้ป็อบ โอเปอร์เรนั้นออกเมา 
เเต่ถ้า โอเปอณเรเตรอ์ที่อยู่ภายใน นั้นมาค่าน้อยกกว่า สามารถ พุตโอเปอร์เรเตอร์ลงไปไดเเลย 
ทำซ้ำไปเรื่อย หากข้อมูลหมดเเล้วให้ยป็อปโอเปอร์เรตอร์เออกมาจนเส็กว่าง 
เป็นอันเสร็จการ เเปลง จกาอินฟริกเป็น โฟสต์ฟริก
อัลกอลึทึม ตรวจสอบสัจจนิรันดิ์
กรณีที่เกิดขึ้นทั้งหมด n ยกกำลัง 2 

ถ้าเป็น เคสพิเศษ คือ pq&!r|s>sr|%  
คตัวแปรตติดกัน สอง ตัว
เครื่องหมายติดกันสองตัว 
นิเสธ แปลกๆ ที่อยู่ระหว่างกล่าง pq&!r|s>s!r|!% 
ถ้าเป็น not พื้นที่คือนับตั้งเเต่ข้างหลัง จนกว่าจะเจอ โอเปอร์เรชั่น ตตัวที่สอบ ที่ไม่นับ not หรือ เป็น ตัวเเรกของตริง 
โอเปอร์เรน ดูว่า โอเปอณเรนว่าเป็นเท่าไร ถ้า โอเปอร์เรน เป็น 0 เนี่ย 
เเปลว่า นิเสธติดกับตัวโอเปอร์เรเตอร์ 
- ให้เอาค่าความจริงล่าสุดมาคำนวน
ถ้าโอเปอร์เรน เป็น 1 เเปลว่า ติดอยู่กับ 
ตัวโอเปอร์เรน ให้เอา ค่าล่าสุด เนี่ย มำคำนวน 
ถ้าโอเปอร์เรน เป็น 2 เแปลว่า ตัวโอแเปอร์เรเตอร์ ล่าสุด มาคำนวน  

1.เพ
 nowExpression += s
                if s in operator : # เป็นตัวดำเนินการ
                     l[-2] = grs.getResult(-2,-1,s)
                     l[-1] = None
                elif s in operand : # อยู่ในโอเปอร์เรน เเปลว่ามีค่าความจริงเเล้ว
                    if type(frist) == type(None) :#ตัวเเรกว่าง
                        l[-2] = dictElement[s][row]
                    else:
                        l[-1] = dictElement[s][row]
                        
                        
มีลิตขของ นิพจฯ์ที่เกิดค่วามจริงไว้ใน
ถ้าเกิดว่าคัวที่ ทำอยู่ มีค่าคววามจริงอยู่เเล้ว ให้เอาค่าความจริงนั้นมา 
ถ้าไม่มีให้คำนวนให้ โดยเอา ค่าความจริงจากนิพจ์เดี่ย ว
เเล้วเพิ่มเข้าไปในลิต 
ถ้านับเเล้ว มี ตัวแปรติดกันสองตัววให้นับจากข้างหลัง ว่ามี หรือ ยัง
ถ้ามีก็เอามาเป็นตัวที่สองได้ 
ถ้าไม่มีก็สร้างไม่
เมื่อเสร็จเเล้ว ลบค่าที่นับ 
ถ้า นิเสธติดกับ ตัวเปรให้ทำซะ โดยเอาตัวแปรนั้นๆ มาคำนวน เเล้วเพิ่มในลิต เเต่ไม่ลบค่าที่นับนะ 

เอา Postfix ที่ได้ มาใส่ในดิก โดยมี Key เป็น ประพจน์นั้นๆ เเล้ว value เป็น ค่า ความจริง ที่ เกิดจากประพจน์นั้นๆ
p q r s pq& sr| pq&! pq&!r| pq&!r|s> pq&!r|s>sr|%



เมื่อได้ดิกเเล้ว 
จะวนลูปในคีย
 ซึ่งจะเป็น
โดยเ๙็คว่าประพจน์ก่อนหน้านั้นมี ค่าคามจริงหรือไม่ 
โดย ให้ นำค่า ปรพดเเรก มีเป็น พารามิเตอณื ประพจ์หลังมาเป็น พารามิเตอร์เช่นกัน ตัวถัดไปเป็น โอเปอร์เรเตอร์ 
#ลักษณะประพจน์ 
p!  pq& pq&! 

มีดิกที่เก็บ 
คีเป็น ประพจ 
เวลู ที่เป็บ ลิต ของ ประพจนั้นๆ 
--สร้างลิตที่เก็บ ดิกของ ประพจน์นั้้นๆ ใน บรรทัด ปัจจบัน (โดยเอัวที่มีค่าอยู่เเล้ว ) เเละตัวที่ไม่มีค่า ถ้ามีค่าอยู่เเล้วให้เป็นในลิตเลย เเต่ถ้าไม่มีค่า ให้ วนลูป โยกเเยกหา ประพจนย่อยเเรก เเละ ประพจน์ยย่อยที่สอง พร้อม โอเปอร์เรตเรอ์ สงเข้า ฟังชั่นหาคำตอบ เเละ เก็บ ประพจนั้นๆ พร้อมค่าคำตอบที่ได้ ลง ลิตๆ ทำซ้ำ จนหมดบรรทัดนั้นๆ เครีลิตเเละ เริ่มบรรทัดใหม่ 


ถ้าเป็นโอเปอร์เรเตอร์ ให้เรียกฟงัก์ชั่น การคำนวน 
เเละให้ frist มีค่าเป็นผลการคำนววน นั้นๆ 
เเละ ให้ secound มีค่าเป็น None

เช็คว่า เฟริสว่างไหม ถ้าว่าง เห็บค่าลงในเฟิด ถ้าไม่ว่างเก็บค่าลงใน สอง 
1 1 1
ถ้าเป็น เคสพิเศษ คือ pq&!r|s>sr|%
คตัวแปรตติดกัน สอง ตัว
เครื่องหมายติดกันสองตัว 
นิเสธ แปลกๆ ที่อยู่ระหว่างกล่าง pq&!r|s>s!r|!% 
ถ้าเป็น not พื้นที่คือนับตั้งเเต่ข้างหลัง จนกว่าจะเจอ โอเปอร์เรชั่น ตตัวที่สอบ ที่ไม่นับ not หรือ เป็น ตัวเเรกของตริง 
 nowExpression += s
                if s in operator : # เป็นตัวดำเนินการ
                     l[-2] = grs.getResult(-2,-1,s)
                     l[-1] = None
                elif s in operand : # อยู่ในโอเปอร์เรน เเปลว่ามีค่าความจริงเเล้ว
                    if type(frist) == type(None) :#ตัวเเรกว่าง
                        l[-2] = dictElement[s][row]
                    else:
                        l[-1] = dictElement[s][row]
                        
                        
มีลิตขของ นิพจฯ์ที่เกิดค่วามจริงไว้ใน
ถ้าเกิดว่าคัวที่ ทำอยู่ มีค่าคววามจริงอยู่เเล้ว ให้เอาค่าความจริงนั้นมา 
ถ้าไม่มีให้คำนวนให้ โดยเอา ค่าความจริงจากนิพจ์เดี่ย ว
เเล้วเพิ่มเข้าไปในลิต 
ถ้านับเเล้ว มี ตัวแปรติดกันสองตัววให้นับจากข้างหลัง ว่ามี หรือ ยัง
ถ้ามีก็เอามาเป็นตัวที่สองได้ 
ถ้าไม่มีก็สร้างไม่
เมื่อเสร็จเเล้ว ลบค่าที่นับ 
ถ้า นิเสธติดกับ ตัวเปรให้ทำซะ โดยเอาตัวแปรนั้นๆ มาคำนวน เเล้วเพิ่มในลิต เเต่ไม่ลบค่าที่นับนะ 

   for s in k :
                nowExpression += s
                if s in operand :
                    countOperand +=1
                    if checkValinlist(haveVal,s): # ไม่ได้ซ้ำในลิต 
                        haveVal.append([s,dictElement[s][row]])#เพิ่มค่าความจริงลงลิต
                elif s in operator : 
                    if s == "!" : # ระวังเรื่องค่าความจริงไม่ตรงกับค่าท่ได้
                        grs.getResult(haveVal[-1]) # เอาตัวที่มีค่าล่าสุดลงไป 
                    elif countOperand == 1 : #โจทย์ซ้อนปกติ